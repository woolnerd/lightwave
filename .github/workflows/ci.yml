name: CI

on:
  push:
    branches: [ main, master, develop, claude/** ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install 'black>=23.0.0' 'flake8>=6.0.0'

      - name: Check code formatting with Black
        run: |
          black --check --diff src/ tests/ *.py

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 src/ tests/ *.py --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. Line length set to 88 (Black default)
          flake8 src/ tests/ *.py --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Verify FFmpeg installation
        run: |
          ffmpeg -version
          ffprobe -version

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run frame extraction tests
        run: |
          python tests/test_frame_extraction.py

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-outputs-py${{ matrix.python-version }}
          path: |
            output/
            data/raw/test_video.mp4
          retention-days: 7
